{"version":3,"sources":["../../../src/MiddlewareStack.ts","../../../src/client.ts","../../../src/command.ts","../../../src/extended-encode-uri-component.ts","../../../src/get-array-if-single-item.ts","../../../src/get-value-from-text-node.ts","../../../src/lazy-json.ts","../../../src/date-utils.ts","../../../src/constants.ts","../../../src/httpResponse.ts","../../../src/httpRequest.ts","../../../src/deserializerMiddleware.ts","../../../src/serializerMiddleware.ts","../../../src/serdePlugin.ts","../../../src/retryMiddleware.ts","../../../src/index.ts","../../../src/delayDecider.ts","../../../src/retryDecider.ts","../../../src/defaultStrategy.ts","../../../src/defaultRetryQuota.ts","../../../src/configurations.ts","../../../src/fetch-http-handler.ts","../../../src/request-timeout.ts","../../../src/stream-collector.ts","../../../src/whatwgEncodingApi.ts","../../../src/pureJs.ts","../node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/rng-browser.js","../node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/middleware-retry/node_modules/uuid/lib/bytesToUuid.js","../../../src/EndpointsConfig.ts","../../../src/RegionConfig.ts","../../../src/middleware.ts","../../../src/loggerMiddleware.ts","../node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/middleware-retry/node_modules/uuid/index.js","../node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v1.js","../node_modules/@aws-amplify/ui-components/node_modules/@aws-sdk/middleware-retry/node_modules/uuid/v4.js"],"names":["constructStack","absoluteEntries","relativeEntries","entriesNameSet","Set","cloneTo","toStack","forEach","entry","add","middleware","addRelativeTo","expandRelativeMiddlewareList","from","expandedMiddlewareList","before","length","after","push","reverse","getMiddlewareList","entries","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","name","toMiddleware","undefined","Error","relation","sort","a","b","stepWeights","step","priorityWeights","priority","map","reduce","wholeList","expendedMiddlewareList","stack","options","has","clone","use","plugin","applyToStack","remove","toRemove","isRemoved","filterCb","delete","filter","removeByName","removeByReference","removeByTag","tags","includes","concat","cloned","resolve","handler","context","initialize","serialize","build","finalizeRequest","deserialize","high","normal","low","config","middlewareStack","this","send","command","optionsOrCb","cb","callback","resolveMiddleware","then","result","output","err","catch","destroy","requestHandler","extendedEncodeURIComponent","str","encodeURIComponent","replace","c","charCodeAt","toString","getArrayIfSingleItem","mayBeArray","Array","isArray","getValueFromTextNode","obj","textNodeName","key","hasOwnProperty","Class","Object","getPrototypeOf","constructor","instance","Function","bind","apply","String","arguments","setPrototypeOf","prototype","create","value","enumerable","writable","configurable","deserializeJSON","JSON","parse","toJSON","fromObject","object","LazyJsonString","stringify","days","months","dateToUtcString","date","year","getUTCFullYear","month","getUTCMonth","dayOfWeek","getUTCDay","dayOfMonthInt","getUTCDate","hoursInt","getUTCHours","minutesInt","getUTCMinutes","secondsInt","getUTCSeconds","dayOfMonthString","hoursString","minutesString","secondsString","statusCode","headers","body","isInstance","response","resp","method","hostname","port","query","protocol","substr","path","charAt","request","req","HttpRequest","keys","carry","paramName","param","deserializer","next","args","logger","outputFilterSensitiveLog","debug","httpResponse","parsed","outputWithoutMetadata","info","serializer","inputFilterSensitiveLog","input","httpRequest","deserializerMiddlewareOption","serializerMiddlewareOption","getSerdePlugin","commandStack","retryMiddlewareOptions","getRetryPlugin","clientStack","retryStrategy","retry","delayBase","attempts","Math","floor","min","random","error","isRetryableByTrait","DEFAULT_MAX_ATTEMPTS","maxAttemptsProvider","retryDecider","delayDecider","retryQuota","initialRetryTokens","MAX_CAPACITY","availableCapacity","getCapacityAmount","hasRetryTokens","freeze","retrieveRetryTokens","capacityAmount","releaseRetryTokens","capacityReleaseAmount","shouldRetry","maxAttempts","getMaxAttempts","totalDelay","retryTokenAmount","$metadata","totalRetryDelay","Promise","setTimeout","httpOptions","handle","abortSignal","requestTimeoutInMs","requestTimeout","aborted","abortError","reject","queryString","url","requestOptions","Headers","AbortController","timeoutInMs","fetchRequest","Request","raceOfPromises","fetch","fetchHeaders","transformedHeaders","pair","status","blob","timeoutError","onabort","race","streamCollector","stream","Blob","readToBase64","base64","arrayBuffer","Uint8Array","collectBlob","res","reader","getReader","isDone","read","done","prior","set","collectStream","FileReader","onloadend","readyState","commaIndex","indexOf","dataOffset","substring","onerror","readAsDataURL","TextEncoder","encode","bytes","i","len","surrogatePair","TextDecoder","decode","decoded","byte","fromCharCode","nextByte","encoded","byteValue","join","decodeURIComponent","getRandomValues","crypto","msCrypto","window","rnds8","module","exports","rnds","r","byteToHex","buf","offset","bth","tls","endpoint","normalizeEndpoint","isCustomEndpoint","urlParser","region","RegExp","test","regionInfoProvider","normalizeRegion","resolveUserAgentConfig","getUserAgentMiddlewareOptions","getUserAgentPlugin","userAgentHeader","runtime","defaultUserAgent","customUserAgent","loggerMiddlewareOptions","getLoggerPlugin","metadata","requestId","extendedRequestId","cfId","v1","require","v4","uuid","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","node","clockseq","seedBytes","msecs","Date","getTime","nsecs","dt","tl","tmh","n","ii"],"mappings":"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","file":"static/js/0.1eaa883b.chunk.js","sourcesContent":["import {\n  AbsoluteLocation,\n  DeserializeHandler,\n  Handler,\n  HandlerExecutionContext,\n  HandlerOptions,\n  MiddlewareStack,\n  MiddlewareType,\n  Pluggable,\n  Priority,\n  RelativeLocation,\n  Step,\n} from \"@aws-sdk/types\";\n\nimport { AbsoluteMiddlewareEntry, MiddlewareEntry, Normalized, RelativeMiddlewareEntry } from \"./types\";\n\nexport const constructStack = <Input extends object, Output extends object>(): MiddlewareStack<Input, Output> => {\n  let absoluteEntries: AbsoluteMiddlewareEntry<Input, Output>[] = [];\n  let relativeEntries: RelativeMiddlewareEntry<Input, Output>[] = [];\n  const entriesNameSet: Set<string> = new Set();\n\n  const sort = <T extends AbsoluteMiddlewareEntry<Input, Output>>(entries: T[]): T[] =>\n    entries.sort(\n      (a, b) =>\n        stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]\n    );\n\n  const removeByName = (toRemove: string): boolean => {\n    let isRemoved = false;\n    const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n      if (entry.name && entry.name === toRemove) {\n        isRemoved = true;\n        entriesNameSet.delete(toRemove);\n        return false;\n      }\n      return true;\n    };\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n\n  const removeByReference = (toRemove: MiddlewareType<Input, Output>): boolean => {\n    let isRemoved = false;\n    const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n      if (entry.middleware === toRemove) {\n        isRemoved = true;\n        if (entry.name) entriesNameSet.delete(entry.name);\n        return false;\n      }\n      return true;\n    };\n    absoluteEntries = absoluteEntries.filter(filterCb);\n    relativeEntries = relativeEntries.filter(filterCb);\n    return isRemoved;\n  };\n\n  const cloneTo = <InputType extends Input, OutputType extends Output>(\n    toStack: MiddlewareStack<InputType, OutputType>\n  ): MiddlewareStack<InputType, OutputType> => {\n    absoluteEntries.forEach((entry) => {\n      //@ts-ignore\n      toStack.add(entry.middleware, { ...entry });\n    });\n    relativeEntries.forEach((entry) => {\n      //@ts-ignore\n      toStack.addRelativeTo(entry.middleware, { ...entry });\n    });\n    return toStack;\n  };\n\n  const expandRelativeMiddlewareList = (\n    from: Normalized<MiddlewareEntry<Input, Output>, Input, Output>\n  ): MiddlewareEntry<Input, Output>[] => {\n    const expandedMiddlewareList: MiddlewareEntry<Input, Output>[] = [];\n    from.before.forEach((entry) => {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n      }\n    });\n    expandedMiddlewareList.push(from);\n    from.after.reverse().forEach((entry) => {\n      if (entry.before.length === 0 && entry.after.length === 0) {\n        expandedMiddlewareList.push(entry);\n      } else {\n        expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n      }\n    });\n    return expandedMiddlewareList;\n  };\n\n  /**\n   * Get a final list of middleware in the order of being executed in the resolved handler.\n   */\n  const getMiddlewareList = (): Array<MiddlewareType<Input, Output>> => {\n    const normalizedAbsoluteEntries: Normalized<AbsoluteMiddlewareEntry<Input, Output>, Input, Output>[] = [];\n    const normalizedRelativeEntries: Normalized<RelativeMiddlewareEntry<Input, Output>, Input, Output>[] = [];\n    const normalizedEntriesNameMap: {\n      [middlewareName: string]: Normalized<MiddlewareEntry<Input, Output>, Input, Output>;\n    } = {};\n\n    absoluteEntries.forEach((entry) => {\n      const normalizedEntry = {\n        ...entry,\n        before: [],\n        after: [],\n      };\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedAbsoluteEntries.push(normalizedEntry);\n    });\n\n    relativeEntries.forEach((entry) => {\n      const normalizedEntry = {\n        ...entry,\n        before: [],\n        after: [],\n      };\n      if (normalizedEntry.name) normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n      normalizedRelativeEntries.push(normalizedEntry);\n    });\n\n    normalizedRelativeEntries.forEach((entry) => {\n      if (entry.toMiddleware) {\n        const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n        if (toMiddleware === undefined) {\n          throw new Error(\n            `${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${\n              entry.toMiddleware\n            }`\n          );\n        }\n        if (entry.relation === \"after\") {\n          toMiddleware.after.push(entry);\n        }\n        if (entry.relation === \"before\") {\n          toMiddleware.before.push(entry);\n        }\n      }\n    });\n\n    const mainChain = sort(normalizedAbsoluteEntries)\n      .map(expandRelativeMiddlewareList)\n      .reduce((wholeList, expendedMiddlewareList) => {\n        // TODO: Replace it with Array.flat();\n        wholeList.push(...expendedMiddlewareList);\n        return wholeList;\n      }, [] as MiddlewareEntry<Input, Output>[]);\n    return mainChain.map((entry) => entry.middleware);\n  };\n\n  const stack = {\n    add: (middleware: MiddlewareType<Input, Output>, options: HandlerOptions & AbsoluteLocation = {}) => {\n      const { name } = options;\n      const entry: AbsoluteMiddlewareEntry<Input, Output> = {\n        step: \"initialize\",\n        priority: \"normal\",\n        middleware,\n        ...options,\n      };\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          throw new Error(`Duplicate middleware name '${name}'`);\n        }\n        entriesNameSet.add(name);\n      }\n      absoluteEntries.push(entry);\n    },\n\n    addRelativeTo: (middleware: MiddlewareType<Input, Output>, options: HandlerOptions & RelativeLocation) => {\n      const { name } = options;\n      const entry: RelativeMiddlewareEntry<Input, Output> = {\n        middleware,\n        ...options,\n      };\n      if (name) {\n        if (entriesNameSet.has(name)) {\n          throw new Error(`Duplicated middleware name '${name}'`);\n        }\n        entriesNameSet.add(name);\n      }\n      relativeEntries.push(entry);\n    },\n\n    clone: () => cloneTo(constructStack<Input, Output>()),\n\n    use: (plugin: Pluggable<Input, Output>) => {\n      plugin.applyToStack(stack);\n    },\n\n    remove: (toRemove: MiddlewareType<Input, Output> | string): boolean => {\n      if (typeof toRemove === \"string\") return removeByName(toRemove);\n      else return removeByReference(toRemove);\n    },\n\n    removeByTag: (toRemove: string): boolean => {\n      let isRemoved = false;\n      const filterCb = (entry: MiddlewareEntry<Input, Output>): boolean => {\n        const { tags, name } = entry;\n        if (tags && tags.includes(toRemove)) {\n          if (name) entriesNameSet.delete(name);\n          isRemoved = true;\n          return false;\n        }\n        return true;\n      };\n      absoluteEntries = absoluteEntries.filter(filterCb);\n      relativeEntries = relativeEntries.filter(filterCb);\n      return isRemoved;\n    },\n\n    concat: <InputType extends Input, OutputType extends Output>(\n      from: MiddlewareStack<InputType, OutputType>\n    ): MiddlewareStack<InputType, OutputType> => {\n      const cloned = cloneTo(constructStack<InputType, OutputType>());\n      cloned.use(from);\n      return cloned;\n    },\n\n    applyToStack: cloneTo,\n\n    resolve: <InputType extends Input, OutputType extends Output>(\n      handler: DeserializeHandler<InputType, OutputType>,\n      context: HandlerExecutionContext\n    ): Handler<InputType, OutputType> => {\n      for (const middleware of getMiddlewareList().reverse()) {\n        handler = middleware(handler as Handler<Input, OutputType>, context) as any;\n      }\n      return handler as Handler<InputType, OutputType>;\n    },\n  };\n  return stack;\n};\n\nconst stepWeights: { [key in Step]: number } = {\n  initialize: 5,\n  serialize: 4,\n  build: 3,\n  finalizeRequest: 2,\n  deserialize: 1,\n};\n\nconst priorityWeights: { [key in Priority]: number } = {\n  high: 3,\n  normal: 2,\n  low: 1,\n};\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nimport { Client as IClient, Command, MetadataBearer, RequestHandler } from \"@aws-sdk/types\";\n\nexport interface SmithyConfiguration<HandlerOptions> {\n  requestHandler: RequestHandler<any, any, HandlerOptions>;\n  readonly apiVersion: string;\n}\n\nexport type SmithyResolvedConfiguration<HandlerOptions> = SmithyConfiguration<HandlerOptions>;\n\nexport class Client<\n  HandlerOptions,\n  ClientInput extends object,\n  ClientOutput extends MetadataBearer,\n  ResolvedClientConfiguration extends SmithyResolvedConfiguration<HandlerOptions>\n> implements IClient<ClientInput, ClientOutput, ResolvedClientConfiguration> {\n  public middlewareStack = constructStack<ClientInput, ClientOutput>();\n  readonly config: ResolvedClientConfiguration;\n  constructor(config: ResolvedClientConfiguration) {\n    this.config = config;\n  }\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    options?: HandlerOptions\n  ): Promise<OutputType>;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    options: HandlerOptions,\n    cb: (err: any, data?: OutputType) => void\n  ): void;\n  send<InputType extends ClientInput, OutputType extends ClientOutput>(\n    command: Command<ClientInput, InputType, ClientOutput, OutputType, SmithyResolvedConfiguration<HandlerOptions>>,\n    optionsOrCb?: HandlerOptions | ((err: any, data?: OutputType) => void),\n    cb?: (err: any, data?: OutputType) => void\n  ): Promise<OutputType> | void {\n    const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n    const callback = typeof optionsOrCb === \"function\" ? (optionsOrCb as (err: any, data?: OutputType) => void) : cb;\n    const handler = command.resolveMiddleware(this.middlewareStack as any, this.config, options);\n    if (callback) {\n      handler(command)\n        .then(\n          (result) => callback(null, result.output),\n          (err: any) => callback(err)\n        )\n        .catch(\n          // prevent any errors thrown in the callback from triggering an\n          // unhandled promise rejection\n          () => {}\n        );\n    } else {\n      return handler(command).then((result) => result.output);\n    }\n  }\n\n  destroy() {\n    if (this.config.requestHandler.destroy) this.config.requestHandler.destroy();\n  }\n}\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nimport { Command as ICommand, Handler, MetadataBearer, MiddlewareStack as IMiddlewareStack } from \"@aws-sdk/types\";\n\nexport abstract class Command<\n  Input extends ClientInput,\n  Output extends ClientOutput,\n  ResolvedClientConfiguration,\n  ClientInput extends object = any,\n  ClientOutput extends MetadataBearer = any\n> implements ICommand<ClientInput, Input, ClientOutput, Output, ResolvedClientConfiguration> {\n  abstract input: Input;\n  readonly middlewareStack: IMiddlewareStack<Input, Output> = constructStack<Input, Output>();\n  abstract resolveMiddleware(\n    stack: IMiddlewareStack<ClientInput, ClientOutput>,\n    configuration: ResolvedClientConfiguration,\n    options: any\n  ): Handler<Input, Output>;\n}\n","/**\n * Function that wraps encodeURIComponent to encode additional characters\n * to fully adhere to RFC 3986.\n */\nexport function extendedEncodeURIComponent(str: string): string {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return \"%\" + c.charCodeAt(0).toString(16);\n  });\n}\n","/**\n * The XML parser will set one K:V for a member that could\n * return multiple entries but only has one.\n */\nexport const getArrayIfSingleItem = <T>(mayBeArray: T): T | T[] =>\n  Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\n","/**\n * Recursively parses object and populates value is node from\n * \"#text\" key if it's available\n */\nexport const getValueFromTextNode = (obj: any) => {\n  const textNodeName = \"#text\";\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n      obj[key] = obj[key][textNodeName];\n    } else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n      obj[key] = getValueFromTextNode(obj[key]);\n    }\n  }\n  return obj;\n};\n","/**\n * Lazy String holder for JSON typed contents.\n */\n\ninterface StringWrapper {\n  new (arg: any): String;\n}\n\n/**\n * Because of https://github.com/microsoft/tslib/issues/95,\n * TS 'extends' shim doesn't support extending native types like String.\n * So here we create StringWrapper that duplicate everything from String\n * class including its prototype chain. So we can extend from here.\n */\n// @ts-ignore StringWrapper implementation is not a simple constructor\nexport const StringWrapper: StringWrapper = function () {\n  //@ts-ignore 'this' cannot be assigned to any, but Object.getPrototypeOf accepts any\n  const Class = Object.getPrototypeOf(this).constructor;\n  const Constructor = Function.bind.apply(String, [null as any, ...arguments]);\n  //@ts-ignore Call wrapped String constructor directly, don't bother typing it.\n  const instance = new Constructor();\n  Object.setPrototypeOf(instance, Class.prototype);\n  return instance as String;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n  constructor: {\n    value: StringWrapper,\n    enumerable: false,\n    writable: true,\n    configurable: true,\n  },\n});\nObject.setPrototypeOf(StringWrapper, String);\n\nexport class LazyJsonString extends StringWrapper {\n  deserializeJSON(): any {\n    return JSON.parse(super.toString());\n  }\n\n  toJSON(): string {\n    return super.toString();\n  }\n\n  static fromObject(object: any): LazyJsonString {\n    if (object instanceof LazyJsonString) {\n      return object;\n    } else if (object instanceof String || typeof object === \"string\") {\n      return new LazyJsonString(object);\n    }\n    return new LazyJsonString(JSON.stringify(object));\n  }\n}\n","/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\n\n// Build indexes outside so we allocate them once.\nconst days: Array<String> = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n// prettier-ignore\nconst months: Array<String> = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport function dateToUtcString(date: Date): string {\n  const year = date.getUTCFullYear();\n  const month = date.getUTCMonth();\n  const dayOfWeek = date.getUTCDay();\n  const dayOfMonthInt = date.getUTCDate();\n  const hoursInt = date.getUTCHours();\n  const minutesInt = date.getUTCMinutes();\n  const secondsInt = date.getUTCSeconds();\n\n  // Build 0 prefixed strings for contents that need to be\n  // two digits and where we get an integer back.\n  const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n  const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n  const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n  const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n\n  return `${days[dayOfWeek]}, ${dayOfMonthString} ${months[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\n","/**\n * The base number of milliseconds to use in calculating a suitable cool-down\n * time when a retryable error is encountered.\n */\nexport const DEFAULT_RETRY_DELAY_BASE = 100;\n\n/**\n * The maximum amount of time (in milliseconds) that will be used as a delay\n * between retry attempts.\n */\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\n\n/**\n * The retry delay base (in milliseconds) to use when a throttling error is\n * encountered.\n */\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\n\n/**\n * Initial number of retry tokens in Retry Quota\n */\nexport const INITIAL_RETRY_TOKENS = 500;\n\n/**\n * The total amount of retry tokens to be decremented from retry token balance.\n */\nexport const RETRY_COST = 5;\n\n/**\n * The total amount of retry tokens to be decremented from retry token balance\n * when a throttling error is encountered.\n */\nexport const TIMEOUT_RETRY_COST = 10;\n\n/**\n * The total amount of retry token to be incremented from retry token balance\n * if an SDK operation invocation succeeds without requiring a retry request.\n */\nexport const NO_RETRY_INCREMENT = 1;\n","import { HeaderBag, HttpMessage, HttpResponse as IHttpResponse } from \"@aws-sdk/types\";\n\ntype HttpResponseOptions = Partial<HttpMessage> & {\n  statusCode: number;\n};\n\nexport interface HttpResponse extends IHttpResponse {}\n\nexport class HttpResponse {\n  public statusCode: number;\n  public headers: HeaderBag;\n  public body?: any;\n\n  constructor(options: HttpResponseOptions) {\n    this.statusCode = options.statusCode;\n    this.headers = options.headers || {};\n    this.body = options.body;\n  }\n\n  static isInstance(response: unknown): response is HttpResponse {\n    //determine if response is a valid HttpResponse\n    if (!response) return false;\n    const resp = response as any;\n    return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n  }\n}\n","import { Endpoint, HeaderBag, HttpMessage, HttpRequest as IHttpRequest, QueryParameterBag } from \"@aws-sdk/types\";\n\ntype HttpRequestOptions = Partial<HttpMessage> & Partial<Endpoint> & { method?: string };\n\nexport interface HttpRequest extends IHttpRequest {}\n\nexport class HttpRequest implements HttpMessage, Endpoint {\n  public method: string;\n  public protocol: string;\n  public hostname: string;\n  public port?: number;\n  public path: string;\n  public query: QueryParameterBag;\n  public headers: HeaderBag;\n  public body?: any;\n\n  constructor(options: HttpRequestOptions) {\n    this.method = options.method || \"GET\";\n    this.hostname = options.hostname || \"localhost\";\n    this.port = options.port;\n    this.query = options.query || {};\n    this.headers = options.headers || {};\n    this.body = options.body;\n    this.protocol = options.protocol\n      ? options.protocol.substr(-1) !== \":\"\n        ? `${options.protocol}:`\n        : options.protocol\n      : \"https:\";\n    this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n  }\n\n  static isInstance(request: unknown): request is HttpRequest {\n    //determine if request is a valid httpRequest\n    if (!request) return false;\n    const req: any = request;\n    return (\n      \"method\" in req &&\n      \"protocol\" in req &&\n      \"hostname\" in req &&\n      \"path\" in req &&\n      typeof req[\"query\"] === \"object\" &&\n      typeof req[\"headers\"] === \"object\"\n    );\n  }\n\n  clone(): HttpRequest {\n    const cloned = new HttpRequest({\n      ...this,\n      headers: { ...this.headers },\n    });\n    if (cloned.query) cloned.query = cloneQuery(cloned.query);\n    return cloned;\n  }\n}\n\nfunction cloneQuery(query: QueryParameterBag): QueryParameterBag {\n  return Object.keys(query).reduce((carry: QueryParameterBag, paramName: string) => {\n    const param = query[paramName];\n    return {\n      ...carry,\n      [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n  }, {});\n}\n","import {\n  DeserializeHandler,\n  DeserializeHandlerArguments,\n  DeserializeHandlerOutput,\n  DeserializeMiddleware,\n  HandlerExecutionContext,\n  ResponseDeserializer,\n} from \"@aws-sdk/types\";\n\nexport const deserializerMiddleware = <Input extends object, Output extends object, RuntimeUtils = any>(\n  options: RuntimeUtils,\n  deserializer: ResponseDeserializer<any, any, RuntimeUtils>\n): DeserializeMiddleware<Input, Output> => (\n  next: DeserializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): DeserializeHandler<Input, Output> => async (\n  args: DeserializeHandlerArguments<Input>\n): Promise<DeserializeHandlerOutput<Output>> => {\n  const { logger, outputFilterSensitiveLog } = context;\n\n  const { response } = await next(args);\n\n  if (typeof logger?.debug === \"function\") {\n    logger.debug({\n      httpResponse: response,\n    });\n  }\n\n  const parsed = await deserializer(response, options);\n\n  // Log parsed after $metadata is removed in https://github.com/aws/aws-sdk-js-v3/issues/1490\n  const { $metadata, ...outputWithoutMetadata } = parsed;\n\n  if (typeof logger?.info === \"function\") {\n    logger.info({\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n    });\n  }\n\n  return {\n    response,\n    output: parsed as Output,\n  };\n};\n","import {\n  EndpointBearer,\n  HandlerExecutionContext,\n  RequestSerializer,\n  SerializeHandler,\n  SerializeHandlerArguments,\n  SerializeHandlerOutput,\n  SerializeMiddleware,\n} from \"@aws-sdk/types\";\n\nexport const serializerMiddleware = <Input extends object, Output extends object, RuntimeUtils extends EndpointBearer>(\n  options: RuntimeUtils,\n  serializer: RequestSerializer<any, RuntimeUtils>\n): SerializeMiddleware<Input, Output> => (\n  next: SerializeHandler<Input, Output>,\n  context: HandlerExecutionContext\n): SerializeHandler<Input, Output> => async (\n  args: SerializeHandlerArguments<Input>\n): Promise<SerializeHandlerOutput<Output>> => {\n  const { logger, inputFilterSensitiveLog } = context;\n\n  if (typeof logger?.info === \"function\") {\n    logger.info({\n      input: inputFilterSensitiveLog(args.input),\n    });\n  }\n\n  const request = await serializer(args.input, options);\n\n  if (typeof logger?.debug === \"function\") {\n    logger.debug({\n      httpRequest: request,\n    });\n  }\n\n  return next({\n    ...args,\n    request,\n  });\n};\n","import {\n  DeserializeHandlerOptions,\n  EndpointBearer,\n  MetadataBearer,\n  MiddlewareStack,\n  Pluggable,\n  RequestSerializer,\n  ResponseDeserializer,\n  SerializeHandlerOptions,\n} from \"@aws-sdk/types\";\n\nimport { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\n\nexport const deserializerMiddlewareOption: DeserializeHandlerOptions = {\n  name: \"deserializerMiddleware\",\n  step: \"deserialize\",\n  tags: [\"DESERIALIZER\"],\n};\n\nexport const serializerMiddlewareOption: SerializeHandlerOptions = {\n  name: \"serializerMiddleware\",\n  step: \"serialize\",\n  tags: [\"SERIALIZER\"],\n};\n\nexport function getSerdePlugin<\n  InputType extends object,\n  SerDeContext extends EndpointBearer,\n  OutputType extends MetadataBearer\n>(\n  config: SerDeContext,\n  serializer: RequestSerializer<any, SerDeContext>,\n  deserializer: ResponseDeserializer<OutputType, any, SerDeContext>\n): Pluggable<InputType, OutputType> {\n  return {\n    applyToStack: (commandStack: MiddlewareStack<InputType, OutputType>) => {\n      commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n      commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n    },\n  };\n}\n","import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => options.retryStrategy.retry(next, args);\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n","export * from \"./loggerMiddleware\";\n","import { MAXIMUM_RETRY_DELAY } from \"./constants\";\n\n/**\n * Calculate a capped, fully-jittered exponential backoff time.\n */\nexport const defaultDelayDecider = (delayBase: number, attempts: number) =>\n  Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n","import {\n  isClockSkewError,\n  isRetryableByTrait,\n  isThrottlingError,\n  isTransientError,\n} from \"@aws-sdk/service-error-classification\";\nimport { SdkError } from \"@aws-sdk/smithy-client\";\n\nexport const defaultRetryDecider = (error: SdkError) => {\n  if (!error) {\n    return false;\n  }\n\n  return isRetryableByTrait(error) || isClockSkewError(error) || isThrottlingError(error) || isTransientError(error);\n};\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { isThrottlingError } from \"@aws-sdk/service-error-classification\";\nimport { SdkError } from \"@aws-sdk/smithy-client\";\nimport { FinalizeHandler, FinalizeHandlerArguments, MetadataBearer, Provider, RetryStrategy } from \"@aws-sdk/types\";\nimport { v4 } from \"uuid\";\n\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS, THROTTLING_RETRY_DELAY_BASE } from \"./constants\";\nimport { getDefaultRetryQuota } from \"./defaultRetryQuota\";\nimport { defaultDelayDecider } from \"./delayDecider\";\nimport { defaultRetryDecider } from \"./retryDecider\";\n\n/**\n * The default value for how many HTTP requests an SDK should make for a\n * single SDK operation invocation before giving up\n */\nexport const DEFAULT_MAX_ATTEMPTS = 3;\n\n/**\n * The default retry algorithm to use.\n */\nexport const DEFAULT_RETRY_MODE = \"standard\";\n\n/**\n * Determines whether an error is retryable based on the number of retries\n * already attempted, the HTTP status code, and the error received (if any).\n *\n * @param error         The error encountered.\n */\nexport interface RetryDecider {\n  (error: SdkError): boolean;\n}\n\n/**\n * Determines the number of milliseconds to wait before retrying an action.\n *\n * @param delayBase The base delay (in milliseconds).\n * @param attempts  The number of times the action has already been tried.\n */\nexport interface DelayDecider {\n  (delayBase: number, attempts: number): number;\n}\n\n/**\n * Interface that specifies the retry quota behavior.\n */\nexport interface RetryQuota {\n  /**\n   * returns true if retry tokens are available from the retry quota bucket.\n   */\n  hasRetryTokens: (error: SdkError) => boolean;\n\n  /**\n   * returns token amount from the retry quota bucket.\n   * throws error is retry tokens are not available.\n   */\n  retrieveRetryTokens: (error: SdkError) => number;\n\n  /**\n   * releases tokens back to the retry quota.\n   */\n  releaseRetryTokens: (releaseCapacityAmount?: number) => void;\n}\n\n/**\n * Strategy options to be passed to StandardRetryStrategy\n */\nexport interface StandardRetryStrategyOptions {\n  retryDecider?: RetryDecider;\n  delayDecider?: DelayDecider;\n  retryQuota?: RetryQuota;\n}\n\nexport class StandardRetryStrategy implements RetryStrategy {\n  private retryDecider: RetryDecider;\n  private delayDecider: DelayDecider;\n  private retryQuota: RetryQuota;\n\n  constructor(private readonly maxAttemptsProvider: Provider<number>, options?: StandardRetryStrategyOptions) {\n    this.retryDecider = options?.retryDecider ?? defaultRetryDecider;\n    this.delayDecider = options?.delayDecider ?? defaultDelayDecider;\n    this.retryQuota = options?.retryQuota ?? getDefaultRetryQuota(INITIAL_RETRY_TOKENS);\n  }\n\n  private shouldRetry(error: SdkError, attempts: number, maxAttempts: number) {\n    return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n  }\n\n  private async getMaxAttempts() {\n    let maxAttempts: number;\n    try {\n      maxAttempts = await this.maxAttemptsProvider();\n    } catch (error) {\n      maxAttempts = DEFAULT_MAX_ATTEMPTS;\n    }\n    return maxAttempts;\n  }\n\n  async retry<Input extends object, Ouput extends MetadataBearer>(\n    next: FinalizeHandler<Input, Ouput>,\n    args: FinalizeHandlerArguments<Input>\n  ) {\n    let retryTokenAmount;\n    let attempts = 0;\n    let totalDelay = 0;\n\n    const maxAttempts = await this.getMaxAttempts();\n\n    const { request } = args;\n    if (HttpRequest.isInstance(request)) {\n      request.headers[\"amz-sdk-invocation-id\"] = v4();\n    }\n\n    while (true) {\n      try {\n        if (HttpRequest.isInstance(request)) {\n          request.headers[\"amz-sdk-request\"] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n        }\n        const { response, output } = await next(args);\n\n        this.retryQuota.releaseRetryTokens(retryTokenAmount);\n        output.$metadata.attempts = attempts + 1;\n        output.$metadata.totalRetryDelay = totalDelay;\n\n        return { response, output };\n      } catch (err) {\n        attempts++;\n        if (this.shouldRetry(err as SdkError, attempts, maxAttempts)) {\n          retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n          const delay = this.delayDecider(\n            isThrottlingError(err) ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE,\n            attempts\n          );\n          totalDelay += delay;\n\n          await new Promise((resolve) => setTimeout(resolve, delay));\n          continue;\n        }\n\n        if (!err.$metadata) {\n          err.$metadata = {};\n        }\n\n        err.$metadata.attempts = attempts;\n        err.$metadata.totalRetryDelay = totalDelay;\n        throw err;\n      }\n    }\n  }\n}\n","import { SdkError } from \"@aws-sdk/smithy-client\";\n\nimport { NO_RETRY_INCREMENT, RETRY_COST, TIMEOUT_RETRY_COST } from \"./constants\";\nimport { RetryQuota } from \"./defaultStrategy\";\n\nexport const getDefaultRetryQuota = (initialRetryTokens: number): RetryQuota => {\n  const MAX_CAPACITY = initialRetryTokens;\n  let availableCapacity = initialRetryTokens;\n\n  const getCapacityAmount = (error: SdkError) => (error.name === \"TimeoutError\" ? TIMEOUT_RETRY_COST : RETRY_COST);\n\n  const hasRetryTokens = (error: SdkError) => getCapacityAmount(error) <= availableCapacity;\n\n  const retrieveRetryTokens = (error: SdkError) => {\n    if (!hasRetryTokens(error)) {\n      // retryStrategy should stop retrying, and return last error\n      throw new Error(\"No retry token available\");\n    }\n    const capacityAmount = getCapacityAmount(error);\n    availableCapacity -= capacityAmount;\n    return capacityAmount;\n  };\n\n  const releaseRetryTokens = (capacityReleaseAmount?: number) => {\n    availableCapacity += capacityReleaseAmount ?? NO_RETRY_INCREMENT;\n    availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n  };\n\n  return Object.freeze({\n    hasRetryTokens,\n    retrieveRetryTokens,\n    releaseRetryTokens,\n  });\n};\n","export interface UserAgentInputConfig {\n  /**\n   * The custom user agent header that would be appended to default one\n   */\n  customUserAgent?: string;\n}\ninterface PreviouslyResolved {\n  defaultUserAgent: string;\n  runtime: string;\n}\nexport interface UserAgentResolvedConfig {\n  defaultUserAgent: string;\n  customUserAgent?: string;\n  runtime: string;\n}\nexport function resolveUserAgentConfig<T>(\n  input: T & PreviouslyResolved & UserAgentInputConfig\n): T & UserAgentResolvedConfig {\n  return input;\n}\n","import { HttpHandler, HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { HeaderBag, HttpHandlerOptions } from \"@aws-sdk/types\";\n\nimport { requestTimeout } from \"./request-timeout\";\n\ndeclare let AbortController: any;\n\n/**\n * Represents the http options that can be passed to a browser http client.\n */\nexport interface BrowserHttpOptions {\n  /**\n   * The number of milliseconds a request can take before being automatically\n   * terminated.\n   */\n  requestTimeout?: number;\n}\n\nexport class FetchHttpHandler implements HttpHandler {\n  constructor(private readonly httpOptions: BrowserHttpOptions = {}) {}\n\n  destroy(): void {\n    // Do nothing. TLS and HTTP/2 connection pooling is handled by the\n    // browser.\n  }\n\n  handle(request: HttpRequest, options: HttpHandlerOptions): Promise<{ response: HttpResponse }> {\n    const abortSignal = options?.abortSignal;\n    const requestTimeoutInMs = this.httpOptions.requestTimeout;\n\n    // if the request was already aborted, prevent doing extra work\n    if (abortSignal?.aborted) {\n      const abortError = new Error(\"Request aborted\");\n      abortError.name = \"AbortError\";\n      return Promise.reject(abortError);\n    }\n\n    let path = request.path;\n    if (request.query) {\n      const queryString = buildQueryString(request.query);\n      if (queryString) {\n        path += `?${queryString}`;\n      }\n    }\n\n    const port = request.port;\n    const url = `${request.protocol}//${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n    const requestOptions: RequestInit = {\n      body: request.body,\n      headers: new Headers(request.headers),\n      method: request.method,\n    };\n\n    // some browsers support abort signal\n    if (typeof AbortController !== \"undefined\") {\n      (requestOptions as any)[\"signal\"] = abortSignal;\n    }\n\n    const fetchRequest = new Request(url, requestOptions);\n    const raceOfPromises = [\n      fetch(fetchRequest).then((response) => {\n        const fetchHeaders: any = response.headers;\n        const transformedHeaders: HeaderBag = {};\n\n        for (const pair of <Array<string[]>>fetchHeaders.entries()) {\n          transformedHeaders[pair[0]] = pair[1];\n        }\n\n        const hasReadableStream = response.body !== undefined;\n\n        // Return the response with buffered body\n        if (!hasReadableStream) {\n          return response.blob().then((body) => ({\n            response: new HttpResponse({\n              headers: transformedHeaders,\n              statusCode: response.status,\n              body,\n            }),\n          }));\n        }\n        // Return the response with streaming body\n        return {\n          response: new HttpResponse({\n            headers: transformedHeaders,\n            statusCode: response.status,\n            body: response.body,\n          }),\n        };\n      }),\n      requestTimeout(requestTimeoutInMs),\n    ];\n    if (abortSignal) {\n      raceOfPromises.push(\n        new Promise<never>((resolve, reject) => {\n          abortSignal.onabort = () => {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            reject(abortError);\n          };\n        })\n      );\n    }\n    return Promise.race(raceOfPromises);\n  }\n}\n","export function requestTimeout(timeoutInMs = 0): Promise<never> {\n  return new Promise((resolve, reject) => {\n    if (timeoutInMs) {\n      setTimeout(() => {\n        const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n        timeoutError.name = \"TimeoutError\";\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}\n","import { StreamCollector } from \"@aws-sdk/types\";\nimport { fromBase64 } from \"@aws-sdk/util-base64-browser\";\n\n//reference: https://snack.expo.io/r1JCSWRGU\nexport const streamCollector: StreamCollector = (stream: Blob | ReadableStream): Promise<Uint8Array> => {\n  if (typeof Blob === \"function\" && stream instanceof Blob) {\n    return collectBlob(stream);\n  }\n\n  return collectStream(stream as ReadableStream);\n};\n\nasync function collectBlob(blob: Blob): Promise<Uint8Array> {\n  const base64 = await readToBase64(blob);\n  const arrayBuffer = fromBase64(base64);\n  return new Uint8Array(arrayBuffer);\n}\n\nasync function collectStream(stream: ReadableStream): Promise<Uint8Array> {\n  let res = new Uint8Array(0);\n  const reader = stream.getReader();\n  let isDone = false;\n  while (!isDone) {\n    const { done, value } = await reader.read();\n    if (value) {\n      const prior = res;\n      res = new Uint8Array(prior.length + value.length);\n      res.set(prior);\n      res.set(value, prior.length);\n    }\n    isDone = done;\n  }\n  return res;\n}\n\nfunction readToBase64(blob: Blob): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      // reference: https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n      // response from readAsDataURL is always prepended with \"data:*/*;base64,\"\n      if (reader.readyState !== 2) {\n        return reject(new Error(\"Reader aborted too early\"));\n      }\n      const result = (reader.result ?? \"\") as string;\n      // Response can include only 'data:' for empty blob, return empty string in this case.\n      // Otherwise, return the string after ','\n      const commaIndex = result.indexOf(\",\");\n      const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n      resolve(result.substring(dataOffset));\n    };\n    reader.onabort = () => reject(new Error(\"Read aborted\"));\n    reader.onerror = () => reject(reader.error);\n    // reader.readAsArrayBuffer is not always available\n    reader.readAsDataURL(blob);\n  });\n}\n","/**\n * A declaration of the global TextEncoder and TextDecoder constructors.\n *\n * @see https://encoding.spec.whatwg.org/\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace Encoding {\n  interface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n  }\n\n  interface TextDecodeOptions {\n    stream?: boolean;\n  }\n\n  interface TextDecoder {\n    readonly encoding: string;\n    readonly fatal: boolean;\n    readonly ignoreBOM: boolean;\n    decode(input?: ArrayBuffer | ArrayBufferView, options?: TextDecodeOptions): string;\n  }\n\n  export interface TextDecoderConstructor {\n    new (label?: string, options?: TextDecoderOptions): TextDecoder;\n  }\n\n  interface TextEncoder {\n    readonly encoding: \"utf-8\";\n    encode(input?: string): Uint8Array;\n  }\n\n  export interface TextEncoderConstructor {\n    new (): TextEncoder;\n  }\n}\n\ndeclare const TextDecoder: Encoding.TextDecoderConstructor;\n\ndeclare const TextEncoder: Encoding.TextEncoderConstructor;\n\nexport function fromUtf8(input: string): Uint8Array {\n  return new TextEncoder().encode(input);\n}\n\nexport function toUtf8(input: Uint8Array): string {\n  return new TextDecoder(\"utf-8\").decode(input);\n}\n","/**\n * Converts a JS string from its native UCS-2/UTF-16 representation into a\n * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.\n *\n * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google\n * Closure library, though updated to use typed arrays.\n */\nexport const fromUtf8 = (input: string): Uint8Array => {\n  const bytes: Array<number> = [];\n  for (let i = 0, len = input.length; i < len; i++) {\n    const value = input.charCodeAt(i);\n    if (value < 0x80) {\n      bytes.push(value);\n    } else if (value < 0x800) {\n      bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n    } else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n      const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n      bytes.push(\n        (surrogatePair >> 18) | 0b11110000,\n        ((surrogatePair >> 12) & 0b111111) | 0b10000000,\n        ((surrogatePair >> 6) & 0b111111) | 0b10000000,\n        (surrogatePair & 0b111111) | 0b10000000\n      );\n    } else {\n      bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n    }\n  }\n\n  return Uint8Array.from(bytes);\n};\n\n/**\n * Converts a typed array of bytes containing UTF-8 data into a native JS\n * string.\n *\n * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the\n * Google Closure library, though updated to use typed arrays and to better\n * handle astral plane code points.\n */\nexport const toUtf8 = (input: Uint8Array): string => {\n  let decoded = \"\";\n  for (let i = 0, len = input.length; i < len; i++) {\n    const byte = input[i];\n    if (byte < 0x80) {\n      decoded += String.fromCharCode(byte);\n    } else if (0b11000000 <= byte && byte < 0b11100000) {\n      const nextByte = input[++i];\n      decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n    } else if (0b11110000 <= byte && byte < 0b101101101) {\n      const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n      const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n      decoded += decodeURIComponent(encoded);\n    } else {\n      decoded += String.fromCharCode(\n        ((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111)\n      );\n    }\n  }\n\n  return decoded;\n};\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","import { Endpoint, Provider, RegionInfoProvider, UrlParser } from \"@aws-sdk/types\";\n\nexport interface EndpointsInputConfig {\n  /**\n   * The fully qualified endpoint of the webservice. This is only required when using a custom endpoint (for example, when using a local version of S3).\n   */\n  endpoint?: string | Endpoint | Provider<Endpoint>;\n\n  /**\n   * Whether TLS is enabled for requests.\n   */\n  tls?: boolean;\n}\n\ninterface PreviouslyResolved {\n  regionInfoProvider: RegionInfoProvider;\n  urlParser: UrlParser;\n  region: Provider<string>;\n}\n\nexport interface EndpointsResolvedConfig extends Required<EndpointsInputConfig> {\n  endpoint: Provider<Endpoint>;\n  isCustomEndpoint: boolean;\n}\n\nexport const resolveEndpointsConfig = <T>(\n  input: T & EndpointsInputConfig & PreviouslyResolved\n): T & EndpointsResolvedConfig => ({\n  ...input,\n  tls: input.tls ?? true,\n  endpoint: input.endpoint ? normalizeEndpoint(input) : () => getEndPointFromRegion(input),\n  isCustomEndpoint: input.endpoint ? true : false,\n});\n\nconst normalizeEndpoint = (input: EndpointsInputConfig & PreviouslyResolved): Provider<Endpoint> => {\n  const { endpoint, urlParser } = input;\n  if (typeof endpoint === \"string\") {\n    const promisified = Promise.resolve(urlParser(endpoint));\n    return () => promisified;\n  } else if (typeof endpoint === \"object\") {\n    const promisified = Promise.resolve(endpoint);\n    return () => promisified;\n  }\n  return endpoint!;\n};\n\nconst getEndPointFromRegion = async (input: EndpointsInputConfig & PreviouslyResolved) => {\n  const { tls = true } = input;\n  const region = await input.region();\n\n  const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n  if (!dnsHostRegex.test(region)) {\n    throw new Error(\"Invalid region in client config\");\n  }\n\n  const { hostname } = (await input.regionInfoProvider(region)) ?? {};\n  if (!hostname) {\n    throw new Error(\"Cannot resolve hostname from client config\");\n  }\n\n  return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\n","import { LoadedConfigSelectors, LocalConfigOptions } from \"@aws-sdk/node-config-provider\";\nimport { Provider } from \"@aws-sdk/types\";\n\nexport const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\n\nexport const NODE_REGION_CONFIG_OPTIONS: LoadedConfigSelectors<string> = {\n  environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n  configFileSelector: (profile) => profile[REGION_INI_NAME],\n  default: () => {\n    throw new Error(\"Region is missing\");\n  },\n};\n\nexport const NODE_REGION_CONFIG_FILE_OPTIONS: LocalConfigOptions = {\n  preferredFile: \"credentials\",\n};\n\nexport interface RegionInputConfig {\n  /**\n   * The AWS region to which this client will send requests\n   */\n  region?: string | Provider<string>;\n}\n\ninterface PreviouslyResolved {}\n\nexport interface RegionResolvedConfig {\n  region: Provider<string>;\n}\n\nexport const resolveRegionConfig = <T>(input: T & RegionInputConfig & PreviouslyResolved): T & RegionResolvedConfig => {\n  if (!input.region) {\n    throw new Error(\"Region is missing\");\n  }\n  return {\n    ...input,\n    region: normalizeRegion(input.region!),\n  };\n};\n\nconst normalizeRegion = (region: string | Provider<string>): Provider<string> => {\n  if (typeof region === \"string\") {\n    const promisified = Promise.resolve(region);\n    return () => promisified;\n  }\n  return region as Provider<string>;\n};\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport {\n  BuildHandler,\n  BuildHandlerArguments,\n  BuildHandlerOptions,\n  BuildHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { UserAgentResolvedConfig } from \"./configurations\";\n\nexport function userAgentMiddleware(options: UserAgentResolvedConfig) {\n  return <Output extends MetadataBearer>(next: BuildHandler<any, any>): BuildHandler<any, any> => (\n    args: BuildHandlerArguments<any>\n  ): Promise<BuildHandlerOutput<Output>> => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request)) return next(args);\n    const { headers } = request;\n    const userAgentHeader = options.runtime === \"node\" ? \"user-agent\" : \"x-amz-user-agent\";\n    if (!headers[userAgentHeader]) {\n      headers[userAgentHeader] = `${options.defaultUserAgent}`;\n    } else {\n      headers[userAgentHeader] += ` ${options.defaultUserAgent}`;\n    }\n    if (options.customUserAgent) {\n      headers[userAgentHeader] += ` ${options.customUserAgent}`;\n    }\n    return next({\n      ...args,\n      request,\n    });\n  };\n}\n\nexport const getUserAgentMiddlewareOptions: BuildHandlerOptions = {\n  name: \"getUserAgentMiddleware\",\n  step: \"build\",\n  tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n};\n\nexport const getUserAgentPlugin = (config: UserAgentResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n  },\n});\n","import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  AbsoluteLocation,\n  HandlerExecutionContext,\n  InitializeHandler,\n  InitializeHandlerArguments,\n  InitializeHandlerOptions,\n  InitializeHandlerOutput,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nexport const loggerMiddleware = () => <Output extends MetadataBearer = MetadataBearer>(\n  next: InitializeHandler<any, Output>,\n  context: HandlerExecutionContext\n): InitializeHandler<any, Output> => async (\n  args: InitializeHandlerArguments<any>\n): Promise<InitializeHandlerOutput<Output>> => {\n  const { logger } = context;\n\n  const response = await next(args);\n\n  if (!logger) {\n    return response;\n  }\n\n  const httpResponse = response.response as HttpResponse;\n\n  if (typeof logger.info === \"function\") {\n    logger.info({\n      metadata: {\n        statusCode: httpResponse.statusCode,\n        requestId: httpResponse.headers[\"x-amzn-requestid\"] ?? httpResponse.headers[\"x-amzn-request-id\"],\n        extendedRequestId: httpResponse.headers[\"x-amz-id-2\"],\n        cfId: httpResponse.headers[\"x-amz-cf-id\"],\n      },\n    });\n  }\n\n  return response;\n};\n\nexport const loggerMiddlewareOptions: InitializeHandlerOptions & AbsoluteLocation = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getLoggerPlugin = (options: any): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  },\n});\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n"],"sourceRoot":""}